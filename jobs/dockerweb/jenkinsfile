
pipeline {
  agent any
 parameters {
        string(name: 'name_container', defaultValue: 'proyecto-qa', description: 'docker name')
        string(name: 'name_image', defaultValue: 'iproyecto-qa', description: 'image name')
        string(name: 'tag_image', defaultValue: 'latest', description: 'image tag')
        string(name: 'port_image', defaultValue: '81', description: 'port to publish')
    }
    environment {
        name_final = "${name_container}${tag_image}${port_image}"        
    }
    stages {
          stage('stop/rm') {

            when {
                expression { 
                    DOCKER_EXIST = sh(returnStdout: true, script: 'echo "$(docker ps -q --filter name=${name_final})"').trim()
                    return  DOCKER_EXIST != '' 
                }
            }
            steps {
                script{
                    sh ''' 
                         docker stop ${name_final}
                    '''
                    }
                    
                }                    
                                  
            }
           
        stage('build') {
            steps {
                script{
                    sh ''' 
                    docker build    jobs/dockerweb/ -t ${name_image}:${tag_image}
                    '''
                    }
                    
                }                    
                                  
            }
            stage('run') {
            steps {
                script{
                    sh ''' 
                        docker run -dp ${port_image}:80 --name ${name_final} ${name_image}:${tag_image}
 
                    '''
                    }
                    
                }                    
                                  
            }
            
          
        }   
    }
